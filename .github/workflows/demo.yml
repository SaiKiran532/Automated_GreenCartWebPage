name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8' # Adjust based on your project requirements

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r Requirements/Requirements.txt
        sudo apt-get update
        sudo apt-get install -y libnss3 lsof

    - name: Install Allure CLI
      run: |
        npm install -g allure-commandline --save-dev

    - name: Run tests
      run: |
        pytest --alluredir=allure-results

    - name: Get Allure history
      uses: actions/checkout@v2
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages

    - name: Allure Report action from marketplace
      uses: simple-elf/allure-report-action@master
      if: always()
      id: allure-report
      with:
        allure_results: allure-results
        gh_pages: gh-pages
        allure_report: allure-report
        allure_history: allure-history

    - name: Deploy report to Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: allure-history

    # - name: Generate Allure report
    #   run: |
    #     mkdir -p allure-report
    #     allure generate allure-results -o allure-report --clean

    # - name: Upload Allure report as artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: allure-report
    #     path: allure-report

    # - name: Upload allure-results for future use
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: allure-results
    #     path: allure-results
